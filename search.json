[{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"http://jumpingrivers.github.io/optiRum/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement rhian@jumpingrivers.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"http://jumpingrivers.github.io/optiRum/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to optiRum","title":"Contributing to optiRum","text":"outlines propose change optiRum. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to optiRum","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to optiRum","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"http://jumpingrivers.github.io/optiRum/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to optiRum","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"jumpingrivers/optiRum\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to optiRum","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to optiRum","text":"Please note optiRum project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"http://jumpingrivers.github.io/optiRum/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"http://jumpingrivers.github.io/optiRum/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"http://jumpingrivers.github.io/optiRum/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"http://jumpingrivers.github.io/optiRum/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2022 Jumping Rivers  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. optiRum  Copyright (C) 2022 Jumping Rivers This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"http://jumpingrivers.github.io/optiRum/articles/presentation.html","id":"cut2-in-latex","dir":"Articles","previous_headings":"","what":"cut2 in LaTeX","title":"Presentation components","text":"minor thing one caused significant headaches wonderful cut2() function Hmisc. cut2() flexible boundary generating function produces (IMO) better intervals .e. (0,5] cut interval means numbers greater 0 less equal 5 [0,5) cut2 interval means numbers greater equal 0 less 5 cut2 way ensures fewer allocation issues due rounding large number decimal places. Unfortunately try make table LaTeX, thinks ’re trying go “maths mode”. avoid wrote sanitise() function replace sanitize() function knitr escape [ characters table output R. Whilst giving UK name (save function masking issues), also extended correctly handle GBP symbol (\\u00a310) since also issue us.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/articles/presentation.html","id":"charts","dir":"Articles","previous_headings":"","what":"Charts","title":"Presentation components","text":"optiRum contains theme_optimum() (company, adjective) changes ggplot2 default chart look. ggplot2 themes good begin , others extended e.g. ggthemes, wanted standard within company use charts. considerations: colleagues love print, despite best efforts dissuade , meet halfway print 4 A4 pages per sheet (2 pages side) chart labels need legible printed less 50% intended size lot charts time colleagues like compare values y-axis grid lines can aid labels whilst needing legible de-emphasised help keep focus chart’s message much plot area given chart possible space legends minimised","code":"library(ggplot2) library(optiRum)   basicplot<-ggplot(data=iris,                    aes(x=Sepal.Width, y=Sepal.Length, colour=Species)) +    geom_point()   multiplot(basicplot+ggtitle(\"theme_bw()\"),            basicplot+theme_minimal()+ggtitle(\"theme_minimal()\"),            basicplot+theme_optimum()+ggtitle(\"theme_optimum()\"), layout=matrix(1:3,nrow=3))"},{"path":"http://jumpingrivers.github.io/optiRum/articles/presentation.html","id":"generate-pdfs","dir":"Articles","previous_headings":"","what":"Generate PDFs","title":"Presentation components","text":"Using knitr integrate analysis content via LaTeX fantastic. Unfortunately, documents using LaTeX via R package knitr. can end pretty complex documents need multiple passthroughs fully typeset. Unfortunately, handy “Compile PDF” button RStudio, whilst great simple documents end enough passthroughs. time generate lots extra files ’d control file name generated. get around first used build scripts lot compensating work around knit2pdf() function various bits pieces. became relatively standard exceptions different people write date suffixes differently. generatePDF() answer various issues encountered, including pesky environment interactions data.table. generatePDF() takes following arguments (lots defaults): srcpath folder relative current directory don’t change working directories srcname file name, less Rnw extension, easier type plus enforced use case destpath output folder, relative current directory, give better routing rarely wanted PDF among source code destname file name want document output (less .pdf) ’re reliant source file’s name DATED gives date suffix file meaning different versions can generated different days unique file references (enabling way folks , provided model variants time) CLEANUP says whether remove pesky extra files generating PDF can produce QUIET allows produce PDF less console activity, making less burdensome automated tasks like environment passthroughs knit2pdf() best place check examples generatePDF() unit tests.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rhian Davies. Author, maintainer. Steph Locke. Author. Jumping Rivers. Funder.            https://www.jumpingrivers.com/ Optimum Credit Ltd's analysts. Funder.            https://www.optimumcredit.co.uk/ Maëlle Salmon. Contributor.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Davies R, Locke S (2022). optiRum: Financial Functions & . https://github.com/jumpingrivers/optiRum, https://jumpingrivers.github.io/optirum/, http://jumpingrivers.github.io/optiRum/.","code":"@Manual{,   title = {optiRum: Financial Functions & More},   author = {Rhian Davies and Steph Locke},   year = {2022},   note = {https://github.com/jumpingrivers/optiRum, https://jumpingrivers.github.io/optirum/, http://jumpingrivers.github.io/optiRum/}, }"},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/index.html","id":"about","dir":"","previous_headings":"","what":"About","title":"Financial Functions & More","text":"{optiRum} stable package utilities created Optimum Credit Ltd’s analysts.designed provide convenience functions, standards, useful snippets. Optimum Credit derives significant value R platform associated community, non-commercially sensitive functionality made available spirit reciprocity.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Financial Functions & More","text":"latest stable version package available CRAN, can get latest development version running:","code":"devtools::install_github(\"jumpingrivers/optiRum\")"},{"path":"http://jumpingrivers.github.io/optiRum/index.html","id":"financial-calcs","dir":"","previous_headings":"","what":"Financial calcs","title":"Financial Functions & More","text":"range financial functions follow Excel conventions. PV – present value PMT – instalment RATE – interest rate APR – produces annual compound rate needed UK financial services","code":""},{"path":"http://jumpingrivers.github.io/optiRum/index.html","id":"tax-calcs-new","dir":"","previous_headings":"","what":"Tax calcs (NEW)","title":"Financial Functions & More","text":"’ve calculating income expenditure, included generic functions help calculate values UK tax system taxYear provides year date belong . can overridden use tax year, provides means moving changing tax values time calcNetIncome gives ability calculate UK net income figures based personal circumstances tax tables","code":""},{"path":"http://jumpingrivers.github.io/optiRum/index.html","id":"credit-scoring--logistic-regressions","dir":"","previous_headings":"","what":"Credit scoring / logistic regressions","title":"Financial Functions & More","text":"functions credit analysts people dealing logistic regressions: logit, odds probability functions enable conversion logit probability, vice versa anywhere – great handling glm outputs scaledScore – produces scores companies used working assessment credit quality giniChart giniCoef – produces Gini chart keeping Optimum style embeds coefficient, whilst standalone giniCoef function allows extracting value series values use","code":""},{"path":"http://jumpingrivers.github.io/optiRum/index.html","id":"miscellaneous","dir":"","previous_headings":"","what":"Miscellaneous","title":"Financial Functions & More","text":"helper functions reduce document development time: sanitise – handles special characters LaTeX documents, including situations unresolved square brackets beginning great ’ve used cut2 want show summary stats intervals generatePDF – allows production PDFs one-liner multiplot – allows plotting multiple charts one area, primarily benefit producing figures documents pounds – displays values UK pound symbol front UK decimalisation practices, extends scales thousands – displays values nearest thousand condensed format ideal charts, extends scales theme_optimum – produces good looking frame charts convertToXML – lot people concerned getting data XML, ’s difficult find functions put output data XML, function takes XML functionality wraps neatly cases CJ.dt – cross-join function two data.tables wordwrap = Change spaces new lines string - great plotting","code":""},{"path":"http://jumpingrivers.github.io/optiRum/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Financial Functions & More","text":"Please note optiRum project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/APR.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the compound interest rate for a loan — APR","title":"Calculates the compound interest rate for a loan — APR","text":"Based period interest rate, number periods, loan amount, function calculates  compound annual interest rate loan based monthly repayment. calculates based fixed interest rate, FV=0, charging  end period.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/APR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the compound interest rate for a loan — APR","text":"","code":"APR(nper, pmt, pv, fv = 0)"},{"path":"http://jumpingrivers.github.io/optiRum/reference/APR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the compound interest rate for a loan — APR","text":"nper Number periods - monthly pmt Instalment per period (negative) pv Present value .e. loan advance (positive) fv Future value .e. redemption amount","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/APR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the compound interest rate for a loan — APR","text":"rate   effective interest rate per year","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/APR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the compound interest rate for a loan — APR","text":"","code":"# single set of values APR(12,-10,110)  #> [1] 0.1766147  # vector of values df<-data.frame(nper=c(12,24),pmt=c(-10,-10),pv=c(110,220)) APR(df$nper,df$pmt,df$pv) #> [1] 0.17661471 0.08835847"},{"path":"http://jumpingrivers.github.io/optiRum/reference/CJ.dt.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross join two data.tables — CJ.dt","title":"Cross join two data.tables — CJ.dt","text":"package data.table CJ() function produces data.table two vectors. function Cartesian product two data.tables instead.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/CJ.dt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross join two data.tables — CJ.dt","text":"","code":"CJ.dt(X, Y)"},{"path":"http://jumpingrivers.github.io/optiRum/reference/CJ.dt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross join two data.tables — CJ.dt","text":"X data.table Y data.table","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/CJ.dt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross join two data.tables — CJ.dt","text":"dt data.table","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/CJ.dt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross join two data.tables — CJ.dt","text":"","code":"library(data.table) a  <- data.table(a=1:2, b=letters[1:2]) b  <- data.table(c=3:4, d=letters[3:4]) ab <- CJ.dt(a,b)"},{"path":"http://jumpingrivers.github.io/optiRum/reference/PMT.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the repayment for a loan — PMT","title":"Calculates the repayment for a loan — PMT","text":"Based period interest rate, number periods, loan amount, function calculates  repayment loan paid fully end loan. function designed equivalent Excel function PMT.  calculates based fixed interest rate, FV=0, charging  end period. Response rounded 2dp","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/PMT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the repayment for a loan — PMT","text":"","code":"PMT(rate, nper, pv)"},{"path":"http://jumpingrivers.github.io/optiRum/reference/PMT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the repayment for a loan — PMT","text":"rate nominal interest rate per period (positive) nper Number periods pv Present value .e. loan advance (positive)","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/PMT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the repayment for a loan — PMT","text":"pmt Instalment per period (negative)","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/PMT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the repayment for a loan — PMT","text":"","code":"PMT(0.1,12,3000) # =-440.29 taken from excel #> [1] -440.29  df<-data.frame(rate=c(.1,.2),nper=c(12,24),pv=c(3000,1000)) PMT(df$rate,df$nper,df$pv) # =-440.29,-202.55 taken from excel #> [1] -440.29 -202.55"},{"path":"http://jumpingrivers.github.io/optiRum/reference/PV.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the present value — PV","title":"Calculates the present value — PV","text":"Based period interest rate, number periods, instalment, function calculates  present value loan paid fully end loan. function designed equivalent Excel function PV.  calculates based fixed interest rate, FV=0 charging  end period. Response rounded 2dp","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/PV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the present value — PV","text":"","code":"PV(rate, nper, pmt, fv = 0)"},{"path":"http://jumpingrivers.github.io/optiRum/reference/PV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the present value — PV","text":"rate nominal interest rate per period (positive) nper Number periods pmt Instalment per period (negative) fv Future value .e. redemption amount","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/PV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the present value — PV","text":"pv Present value .e. loan advance (positive)","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/PV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the present value — PV","text":"","code":"PV(0.1,12,-10) # 68.14 Taken from excel #> [1] 68.14  df<-data.frame(rate=c(.1,.1),nper=c(12,24),pmt=c(-10,-15)) PV(df$rate,df$nper,df$pmt)  # c(68.14,134.77) Taken from excel #> [1]  68.14 134.77"},{"path":"http://jumpingrivers.github.io/optiRum/reference/RATE.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates compounded interest rate — RATE","title":"Calculates compounded interest rate — RATE","text":"Based loan term, instalment, loan amount, function calculates  associated compound interest rate.  function designed  equivalent Excel function RATE.  calculates fixed interest rate.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/RATE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates compounded interest rate — RATE","text":"","code":"RATE(nper, pmt, pv, fv = 0)"},{"path":"http://jumpingrivers.github.io/optiRum/reference/RATE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates compounded interest rate — RATE","text":"nper Number periods pmt Instalment per period (negative) pv Present value .e. loan advance (positive) fv Future value .e. redemption amount","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/RATE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates compounded interest rate — RATE","text":"rate corresponding compound interest rate required arrive FV 0","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/RATE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates compounded interest rate — RATE","text":"","code":"RATE(12,-500,3000) # 0.126947 Taken from excel #> [1] 0.1269469  df<-data.frame(nper=c(12,12),pmt=c(-500,-400),pv=c(3000,3000)) RATE(df$nper,df$pmt,df$pv)  # c(0.126947,0.080927) Taken from excel #> [1] 0.12694689 0.08092716"},{"path":"http://jumpingrivers.github.io/optiRum/reference/calcNetIncome.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate income after tax and benefits — calcNetIncome","title":"Calculate income after tax and benefits — calcNetIncome","text":"Based current UK taxation rules function  calculates components subtract gross income provides net income.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/calcNetIncome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate income after tax and benefits — calcNetIncome","text":"","code":"calcNetIncome(   persons = data.table(personID = 1:2, householdID = 1, employedIncome = c(15000,     40000), investmentIncome = c(0, 5000), nonTaxableIncome = 0, selfEmployedProfits = 0,     taxCode = \"1000L\", numberOfChildren = 1, salarySacrificePercentage = c(0, 0.05),     studentLoan = 0:1),   incomeGrain = \"Month\",   financialYear = taxYear(Sys.Date()),   modelArgs = list(model = FALSE, inflation = 1, years = 3, childBenefitChange = 1,     personalAllowanceChange = 500),   thresholdsTable = fread(system.file(\"extdata\", \"annualthresholds.csv\", package =     \"optiRum\")),   taxRateTable = fread(system.file(\"extdata\", \"annualtaxthresholds.csv\", package =     \"optiRum\")) )"},{"path":"http://jumpingrivers.github.io/optiRum/reference/calcNetIncome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate income after tax and benefits — calcNetIncome","text":"persons Provide information required calculating income, values provided annual incomes incomeGrain Define time period income return expressed .e. \"Annual\", \"Month\", \"Week\" financialYear financial year calculation performed . go back 2014, need go back please submit pull request CSVs inst/extdata filled . modelArgs Indicate whether forward prediction  changing values performed, scenario values used thresholdsTable values needed calculating various components taxRateTable values needed calculating Income Tax NI (Class 1 4). Rate tables contain lower bound (LB), upper bound (UB)  prevailing tax rates (Rate) portions  income taxed . LB >= Income < UB","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/calcNetIncome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate income after tax and benefits — calcNetIncome","text":"income                    Income components person relevant grain","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/calcNetIncome.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate income after tax and benefits — calcNetIncome","text":"Current, context default values, Tax Year 2014","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/convertToXML.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce an XML document of a table — convertToXML","title":"Produce an XML document of a table — convertToXML","text":"Produce document containing data.table data.frame rows","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/convertToXML.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce an XML document of a table — convertToXML","text":"","code":"convertToXML(data, name = \"doc\")"},{"path":"http://jumpingrivers.github.io/optiRum/reference/convertToXML.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce an XML document of a table — convertToXML","text":"data data converted name toplevel node name","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/convertToXML.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce an XML document of a table — convertToXML","text":"xml XML object","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/convertToXML.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Produce an XML document of a table — convertToXML","text":"Code taken https://stat.ethz.ch/pipermail/r-help/2010-February/228025.html  amended, basic tests applied","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/convertToXML.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce an XML document of a table — convertToXML","text":"","code":"df<-data.frame(nper=c(12,24),pmt=c(-10,-10),pv=c(110,220)) xml<-convertToXML(df,name='examples')"},{"path":"http://jumpingrivers.github.io/optiRum/reference/generatePDF.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an .Rnw file to a PDF — generatePDF","title":"Convert an .Rnw file to a PDF — generatePDF","text":"function designed handle production task 'standard'  PDF process.  designed build using pdflatex  (unless otherwise specified) adequate number times enable full typesetting  occur taking account items like contents pages, glossaries,  figures.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/generatePDF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an .Rnw file to a PDF — generatePDF","text":"","code":"generatePDF(   srcpath = getwd(),   srcname,   destpath = getwd(),   destname = srcname,   DATED = FALSE,   CLEANUP = TRUE,   QUIET = FALSE,   envir = new.env(parent = .GlobalEnv),   ... )"},{"path":"http://jumpingrivers.github.io/optiRum/reference/generatePDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an .Rnw file to a PDF — generatePDF","text":"srcpath Location .Rnw file, default current directory srcname Rnw file name without extension e.g. 'Style' destpath Location PDF file sent , default current directory destname PDF file name without extension e.g. 'Style_output' DATED Boolean indicating whether PDF file name include yyyymmdd added CLEANUP Boolean indicating whether ancillary files removed production QUIET Boolean indicating whether console output limited envir Set default environment knitr run - prevents data.table issue ... Allows additional parameters passed knit2pdf function","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/generatePDF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an .Rnw file to a PDF — generatePDF","text":"","code":"if (FALSE) { # simple call generatePDF(srcname='basic')  # complex call generatePDF( srcname='basic', destpath=getwd(), destname='basic', DATED=TRUE, CLEANUP=FALSE, QUIET=TRUE, compiler='xelatex') }"},{"path":"http://jumpingrivers.github.io/optiRum/reference/giniChart.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a ROC curve with gini coefficient title — giniChart","title":"Produce a ROC curve with gini coefficient title — giniChart","text":"function uses ggplot produce themed Receiver Operator Curve calculates Gini coefficient based .","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/giniChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a ROC curve with gini coefficient title — giniChart","text":"","code":"giniChart(pred, act)"},{"path":"http://jumpingrivers.github.io/optiRum/reference/giniChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a ROC curve with gini coefficient title — giniChart","text":"pred Logit/scores/probabilities compared actuals act column containing outcomes boolean form either factor number","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/giniChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a ROC curve with gini coefficient title — giniChart","text":"","code":"sampledata<- data.frame(val= rnorm(100) , outcome=rbinom(100,1,.8))   giniChart(sampledata$val,sampledata$outcome)"},{"path":"http://jumpingrivers.github.io/optiRum/reference/giniCoef.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a gini coefficient — giniCoef","title":"Produce a gini coefficient — giniCoef","text":"function calculates Gini coefficient based Receiver Operator Curve.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/giniCoef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a gini coefficient — giniCoef","text":"","code":"giniCoef(pred, act)"},{"path":"http://jumpingrivers.github.io/optiRum/reference/giniCoef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a gini coefficient — giniCoef","text":"pred Logit/scores/probabilities compared actuals act column containing outcomes boolean form either factor number","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/giniCoef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a gini coefficient — giniCoef","text":"gini coefficient","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/giniCoef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a gini coefficient — giniCoef","text":"","code":"sampledata<- data.frame(val= rnorm(100) , outcome=rbinom(100,1,.8))   giniCoef(sampledata$val,sampledata$outcome) #> [1] 0.01975052"},{"path":"http://jumpingrivers.github.io/optiRum/reference/logit.odd.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a logit to odds — logit.odd","title":"Convert a logit to odds — logit.odd","text":"Transform logit response glm odds","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/logit.odd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a logit to odds — logit.odd","text":"","code":"logit.odd(logit)"},{"path":"http://jumpingrivers.github.io/optiRum/reference/logit.odd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a logit to odds — logit.odd","text":"logit log(odds)","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/logit.odd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a logit to odds — logit.odd","text":"odds Odds","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/logit.odd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a logit to odds — logit.odd","text":"","code":"logit.odd(0) # equals 1 #> [1] 1"},{"path":"http://jumpingrivers.github.io/optiRum/reference/logit.prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a logit to probability — logit.prob","title":"Convert a logit to probability — logit.prob","text":"Transform logit response glm probability","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/logit.prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a logit to probability — logit.prob","text":"","code":"logit.prob(logit)"},{"path":"http://jumpingrivers.github.io/optiRum/reference/logit.prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a logit to probability — logit.prob","text":"logit log(odds)","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/logit.prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a logit to probability — logit.prob","text":"prob Probability","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/logit.prob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a logit to probability — logit.prob","text":"","code":"logit.prob(0) # equals 0.5 #> [1] 0.5"},{"path":"http://jumpingrivers.github.io/optiRum/reference/multiplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple plot function — multiplot","title":"Multiple plot function — multiplot","text":"Multiplot allows laying multiple charts custom layout","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/multiplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple plot function — multiplot","text":"","code":"multiplot(..., plotlist = NULL, cols = 1, layout = NULL)"},{"path":"http://jumpingrivers.github.io/optiRum/reference/multiplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple plot function — multiplot","text":"... ggplot objects can passed ... plotlist list ggplot objects cols Number columns layout layout matrix specifying layout. present, 'cols' ignored","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/multiplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiple plot function — multiplot","text":"layout something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE), plot 1 go upper left, 2 go upper right, 3 go way across bottom. Code taken -http://www.cookbook-r.com/Graphs/Multiple_graphs_on_one_page_(ggplot2)/  tests maintained present","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/odd.logit.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an odd into a logit — odd.logit","title":"Convert an odd into a logit — odd.logit","text":"Transforming odds logits (response binomial glms)","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/odd.logit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an odd into a logit — odd.logit","text":"","code":"odd.logit(odds)"},{"path":"http://jumpingrivers.github.io/optiRum/reference/odd.logit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an odd into a logit — odd.logit","text":"odds Odds","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/odd.logit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an odd into a logit — odd.logit","text":"logit Log(odds)","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/odd.logit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an odd into a logit — odd.logit","text":"","code":"odd.logit(1) # equals 0 #> [1] 0"},{"path":"http://jumpingrivers.github.io/optiRum/reference/odd.prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an odds to probability — odd.prob","title":"Convert an odds to probability — odd.prob","text":"Transform odds probability","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/odd.prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an odds to probability — odd.prob","text":"","code":"odd.prob(odds)"},{"path":"http://jumpingrivers.github.io/optiRum/reference/odd.prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an odds to probability — odd.prob","text":"odds Odds","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/odd.prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an odds to probability — odd.prob","text":"prob Probability","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/odd.prob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an odds to probability — odd.prob","text":"","code":"odd.prob(1) # equals 0.5 #> [1] 0.5"},{"path":"http://jumpingrivers.github.io/optiRum/reference/optiRum.html","id":null,"dir":"Reference","previous_headings":"","what":"optiRum is a helper package — optiRum","title":"optiRum is a helper package — optiRum","text":"optiRum growing package utilities created Optimum Credit Ltd's analysts.   designed provide convenience functions, standards, useful snippets.   Optimum Credit derives significant value R platform associated community,  non-commercially sensitive functionality made available spirit reciprocity.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/pounds_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Currency formatter: round to nearest penny and display pounds sign. — pounds_format","title":"Currency formatter: round to nearest penny and display pounds sign. — pounds_format","text":"returned function format vector values currency. Values rounded nearest penny, pennies displayed values non-zero pennies largest value less largest_with_penny default 100000.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/pounds_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Currency formatter: round to nearest penny and display pounds sign. — pounds_format","text":"","code":"pounds_format(x, largest_with_penny = 1e+05)  pounds(x)"},{"path":"http://jumpingrivers.github.io/optiRum/reference/pounds_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Currency formatter: round to nearest penny and display pounds sign. — pounds_format","text":"x numeric vector format largest_with_penny value values x must less order cents displayed","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/pounds_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Currency formatter: round to nearest penny and display pounds sign. — pounds_format","text":"function single paramater x, numeric vector,   returns character vector","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/pounds_format.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Currency formatter: round to nearest penny and display pounds sign. — pounds_format","text":"Based heavily scales work Hadley","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/pounds_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Currency formatter: round to nearest penny and display pounds sign. — pounds_format","text":"","code":"pounds_format()(c(100, 0.23, 1.456565, 2e3)) #> [1] \"£100.00\"   \"£0.23\"     \"£1.46\"     \"£2,000.00\" pounds_format()(c(1:10 * 10)) #>  [1] \"£10\"  \"£20\"  \"£30\"  \"£40\"  \"£50\"  \"£60\"  \"£70\"  \"£80\"  \"£90\"  \"£100\" pounds(c(100, 0.23, 1.456565, 2e3)) #> [1] \"£100.00\"   \"£0.23\"     \"£1.46\"     \"£2,000.00\" pounds(c(1:10 * 10)) #>  [1] \"£10\"  \"£20\"  \"£30\"  \"£40\"  \"£50\"  \"£60\"  \"£70\"  \"£80\"  \"£90\"  \"£100\" pounds(10^(1:8)) #> [1] \"£10\"          \"£100\"         \"£1,000\"       \"£10,000\"      \"£100,000\"     #> [6] \"£1,000,000\"   \"£10,000,000\"  \"£100,000,000\""},{"path":"http://jumpingrivers.github.io/optiRum/reference/prob.logit.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a probability into a logit — prob.logit","title":"Convert a probability into a logit — prob.logit","text":"Transforming probabilities logits (response binomial glms)","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/prob.logit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a probability into a logit — prob.logit","text":"","code":"prob.logit(prob)"},{"path":"http://jumpingrivers.github.io/optiRum/reference/prob.logit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a probability into a logit — prob.logit","text":"prob Probability","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/prob.logit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a probability into a logit — prob.logit","text":"logit Log(odds)","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/prob.logit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a probability into a logit — prob.logit","text":"","code":"prob.logit(0.5) # equals 0 #> [1] 0"},{"path":"http://jumpingrivers.github.io/optiRum/reference/prob.odd.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a probability into odds probability — prob.odd","title":"Convert a probability into odds probability — prob.odd","text":"Transform probabilities odds","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/prob.odd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a probability into odds probability — prob.odd","text":"","code":"prob.odd(prob)"},{"path":"http://jumpingrivers.github.io/optiRum/reference/prob.odd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a probability into odds probability — prob.odd","text":"prob Probability","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/prob.odd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a probability into odds probability — prob.odd","text":"odds Odds","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/prob.odd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a probability into odds probability — prob.odd","text":"","code":"prob.odd(0.5) # equals 1 #> [1] 1"},{"path":"http://jumpingrivers.github.io/optiRum/reference/sanitise.html","id":null,"dir":"Reference","previous_headings":"","what":"A cleaning function for special characters — sanitise","title":"A cleaning function for special characters — sanitise","text":"function helper cleaning xtable outputs preparation PDF production","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/sanitise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A cleaning function for special characters — sanitise","text":"","code":"sanitise(str)"},{"path":"http://jumpingrivers.github.io/optiRum/reference/sanitise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A cleaning function for special characters — sanitise","text":"str text sanitised","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/sanitise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A cleaning function for special characters — sanitise","text":"","code":"sanitise('[&%#<>\\\\') #> [1] \"{}[\\\\&\\\\%\\\\#$<$$>$$\\\\backslash$\""},{"path":"http://jumpingrivers.github.io/optiRum/reference/scaledScore.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a scaled score based on a logit — scaledScore","title":"Produce a scaled score based on a logit — scaledScore","text":"function takes logit scales based intercept doubling odds ratio","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/scaledScore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a scaled score based on a logit — scaledScore","text":"","code":"scaledScore(logit, offset = 300, scale = 50)"},{"path":"http://jumpingrivers.github.io/optiRum/reference/scaledScore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a scaled score based on a logit — scaledScore","text":"logit Logit scaled offset Midrange, default 300 scale Value odds double, default 50","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/scaledScore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a scaled score based on a logit — scaledScore","text":"","code":"scaledScore(0) # 300 #> [1] 300 scaledScore(0,offset=600) # 600 #> [1] 600"},{"path":"http://jumpingrivers.github.io/optiRum/reference/taxYear.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the UK financial tax year for a given date — taxYear","title":"Returns the UK financial tax year for a given date — taxYear","text":"Based UK tax year April 6 - April 5, returns year (YYYY)  tax period covers. Tax Year start date can overriden.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/taxYear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the UK financial tax year for a given date — taxYear","text":"","code":"taxYear(date = Sys.Date(), start = \"04-06\")"},{"path":"http://jumpingrivers.github.io/optiRum/reference/taxYear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the UK financial tax year for a given date — taxYear","text":"date Date checked start Provide month & day used first tax day (mm-dd)","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/taxYear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the UK financial tax year for a given date — taxYear","text":"year   financial year","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/taxYear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the UK financial tax year for a given date — taxYear","text":"","code":"# single set of values taxYear(Sys.Date())  #> [1] 2022  # vector of values taxYear(seq(Sys.Date(),by=1,length=500)) #>   [1] 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 #>  [16] 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 #>  [31] 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 #>  [46] 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 #>  [61] 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 #>  [76] 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 #>  [91] 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 #> [106] 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 #> [121] 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 #> [136] 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 #> [151] 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 #> [166] 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 #> [181] 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 #> [196] 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 #> [211] 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 #> [226] 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 #> [241] 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 #> [256] 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 #> [271] 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 #> [286] 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 #> [301] 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 #> [316] 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 2022 #> [331] 2022 2022 2022 2022 2022 2022 2022 2023 2023 2023 2023 2023 2023 2023 2023 #> [346] 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 #> [361] 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 #> [376] 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 #> [391] 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 #> [406] 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 #> [421] 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 #> [436] 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 #> [451] 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 #> [466] 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 #> [481] 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 2023 #> [496] 2023 2023 2023 2023 2023"},{"path":"http://jumpingrivers.github.io/optiRum/reference/theme_optimum.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce an Optimum-standard base chart — theme_optimum","title":"Produce an Optimum-standard base chart — theme_optimum","text":"theme longer builds Stephen theme ggthemes, now produces chart without enclosing box, produce good baseline charting R.  Gets called typical theme.","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/theme_optimum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce an Optimum-standard base chart — theme_optimum","text":"","code":"theme_optimum(base_size = 14, base_family = \"\")"},{"path":"http://jumpingrivers.github.io/optiRum/reference/theme_optimum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce an Optimum-standard base chart — theme_optimum","text":"base_size Anchor font size base_family Font family use","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/theme_optimum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce an Optimum-standard base chart — theme_optimum","text":"","code":"library(ggplot2) ggplot(data.frame(x=1:10,y=1:10),aes(x,y))+theme_optimum()+geom_line()"},{"path":"http://jumpingrivers.github.io/optiRum/reference/thousands_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Thousands formatter: format number with commas separating the number thousands and suffixed with a k. — thousands_format","title":"Thousands formatter: format number with commas separating the number thousands and suffixed with a k. — thousands_format","text":"Based heavily scales work Hadley","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/thousands_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Thousands formatter: format number with commas separating the number thousands and suffixed with a k. — thousands_format","text":"","code":"thousands_format()  thousands(x)"},{"path":"http://jumpingrivers.github.io/optiRum/reference/thousands_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thousands formatter: format number with commas separating the number thousands and suffixed with a k. — thousands_format","text":"x numeric vector format","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/thousands_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Thousands formatter: format number with commas separating the number thousands and suffixed with a k. — thousands_format","text":"function single paramater x, numeric vector,   returns character vector","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/thousands_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Thousands formatter: format number with commas separating the number thousands and suffixed with a k. — thousands_format","text":"","code":"thousands_format()(c(1, 1e3, 2000, 1e6)) #> [1] \"0k\"     \"1k\"     \"2k\"     \"1,000k\" thousands_format()(c(1, 1e3, 2000, 1e6)) #> [1] \"0k\"     \"1k\"     \"2k\"     \"1,000k\" thousands(c(1, 1e3, 2000, 1e6)) #> [1] \"0k\"     \"1k\"     \"2k\"     \"1,000k\""},{"path":"http://jumpingrivers.github.io/optiRum/reference/wordwrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a string with one word per line — wordwrap","title":"Produce a string with one word per line — wordwrap","text":"Designed splitting strings fit better axis charts","code":""},{"path":"http://jumpingrivers.github.io/optiRum/reference/wordwrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a string with one word per line — wordwrap","text":"","code":"wordwrap(x, ...)"},{"path":"http://jumpingrivers.github.io/optiRum/reference/wordwrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a string with one word per line — wordwrap","text":"x string ... Allows additional parameters passed gsub","code":""},{"path":[]},{"path":"http://jumpingrivers.github.io/optiRum/reference/wordwrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce a string with one word per line — wordwrap","text":"","code":"library('ggplot2') names <- wordwrap(c(\"This is a name\",\"Single\")) ggplot(data.frame(x=names,y=1:10),aes(x,y))+theme_optimum()+geom_line()"},{"path":"http://jumpingrivers.github.io/optiRum/news/index.html","id":"optirum-0411","dir":"Changelog","previous_headings":"","what":"optiRum 0.41.1","title":"optiRum 0.41.1","text":"Update maintainer","code":""},{"path":"http://jumpingrivers.github.io/optiRum/news/index.html","id":"optirum-0401","dir":"Changelog","previous_headings":"","what":"optiRum 0.40.1","title":"optiRum 0.40.1","text":"CRAN release: 2018-07-03 Enhancements: * Better website Maintenance: * New tax year data * Improved vignettes * Compatability latest ggplot2 version","code":""},{"path":"http://jumpingrivers.github.io/optiRum/news/index.html","id":"optirum-0373","dir":"Changelog","previous_headings":"","what":"optiRum 0.37.3","title":"optiRum 0.37.3","text":"CRAN release: 2015-12-31 Enhancement: * Made theme_optimum() backwards compatible","code":""},{"path":"http://jumpingrivers.github.io/optiRum/news/index.html","id":"optirum-0372","dir":"Changelog","previous_headings":"","what":"optiRum 0.37.2","title":"optiRum 0.37.2","text":"Maintenance: * Changes ggplot2 2.0.0","code":""},{"path":"http://jumpingrivers.github.io/optiRum/news/index.html","id":"optirum-0371","dir":"Changelog","previous_headings":"","what":"optiRum 0.37.1","title":"optiRum 0.37.1","text":"CRAN release: 2015-11-07 Maintenance: * Changes latest CRAN policies","code":""},{"path":"http://jumpingrivers.github.io/optiRum/news/index.html","id":"optirum-036","dir":"Changelog","previous_headings":"","what":"optiRum 0.36","title":"optiRum 0.36","text":"New: * new function calcIncomeTax borrowers Maintenance: * Changes latest CRAN policies","code":""},{"path":"http://jumpingrivers.github.io/optiRum/news/index.html","id":"optirum-035","dir":"Changelog","previous_headings":"","what":"optiRum 0.35","title":"optiRum 0.35","text":"CRAN release: 2014-12-08 New: * Added wordwrap formatter splitting string multiple lines chart axis Enhancements: * Improved/overhauled theme_optimum() Maintenance: * Improved package metadata function’s use packages","code":""},{"path":"http://jumpingrivers.github.io/optiRum/news/index.html","id":"optirum-034","dir":"Changelog","previous_headings":"","what":"optiRum 0.34","title":"optiRum 0.34","text":"Enhancements: * Added fv argument PV, RATE, APR Bug fixes: * Added space sanitise allow people putting £m etc","code":""},{"path":"http://jumpingrivers.github.io/optiRum/news/index.html","id":"optirum-033","dir":"Changelog","previous_headings":"","what":"optiRum 0.33","title":"optiRum 0.33","text":"CRAN release: 2014-04-25 New: * Added function convertToXML putting data table XML * Added function CJ.dt cross-join two data.tables","code":""},{"path":"http://jumpingrivers.github.io/optiRum/news/index.html","id":"optirum-032","dir":"Changelog","previous_headings":"","what":"optiRum 0.32","title":"optiRum 0.32","text":"CRAN release: 2014-04-04 Bug fixes: * Removed use ~ generatePDF tests violating CRAN policies * Removed reference AUC package theme_optimum required #optiRum 0.31 Bug fixes: * Removed use tempdir() generatePDF tests causing CRAN Windows compilation issues","code":""},{"path":"http://jumpingrivers.github.io/optiRum/news/index.html","id":"optirum-030","dir":"Changelog","previous_headings":"","what":"optiRum 0.30","title":"optiRum 0.30","text":"CRAN release: 2014-03-21 Bug fixes: * Use data.table package resulting errors generatePDF. Code amended work new environment within global package * generatePDF function correctly pass … internal functions. now changed, primarily benefit able compile xelatex etc New: * thousands created provide neater format scales presentations * pounds created provide neater format scales presentations","code":""}]
